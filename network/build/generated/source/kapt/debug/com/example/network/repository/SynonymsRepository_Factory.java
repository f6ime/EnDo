// Generated by Dagger (https://dagger.dev).
package com.example.network.repository;

import com.example.network.api.SynonymsApi;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class SynonymsRepository_Factory implements Factory<SynonymsRepository> {
  private final Provider<SynonymsApi> synonymsApiProvider;

  public SynonymsRepository_Factory(Provider<SynonymsApi> synonymsApiProvider) {
    this.synonymsApiProvider = synonymsApiProvider;
  }

  @Override
  public SynonymsRepository get() {
    return newInstance(synonymsApiProvider.get());
  }

  public static SynonymsRepository_Factory create(Provider<SynonymsApi> synonymsApiProvider) {
    return new SynonymsRepository_Factory(synonymsApiProvider);
  }

  public static SynonymsRepository newInstance(SynonymsApi synonymsApi) {
    return new SynonymsRepository(synonymsApi);
  }
}
