// Generated by Dagger (https://dagger.dev).
package com.example.network.repository;

import com.example.network.api.TranslationApi;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class TranslationRepository_Factory implements Factory<TranslationRepository> {
  private final Provider<TranslationApi> translationApiProvider;

  public TranslationRepository_Factory(Provider<TranslationApi> translationApiProvider) {
    this.translationApiProvider = translationApiProvider;
  }

  @Override
  public TranslationRepository get() {
    return newInstance(translationApiProvider.get());
  }

  public static TranslationRepository_Factory create(
      Provider<TranslationApi> translationApiProvider) {
    return new TranslationRepository_Factory(translationApiProvider);
  }

  public static TranslationRepository newInstance(TranslationApi translationApi) {
    return new TranslationRepository(translationApi);
  }
}
